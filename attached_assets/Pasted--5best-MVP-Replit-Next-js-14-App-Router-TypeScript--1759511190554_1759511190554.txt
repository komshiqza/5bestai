Създай минимално работещ 5best (MVP) като един Replit проект с Next.js 14 (App Router), TypeScript, Tailwind, Prisma + SQLite, shadcn/ui, JWT auth (credentials), и Cloudinary за ъплоуд (fallback към локален /public/uploads).

Изисквания (функции):

Роли и автентикация

Регистрация/логин с email+парола (bcrypt).

Роли: user, admin.

Статуси на профили: pending, approved, banned.

Админ може да одобрява/банва потребители.

JWT в httpOnly cookie; middleware защита на API/страници.

Модели (Prisma + SQLite):

User: id, username, email (unique), passwordHash, role, status, createdAt, updatedAt, gloryBalance (int, default 0).

Contest: id, title, slug, description, rules, coverImageUrl, status (draft|active|ended), prizeGlory (int), startAt, endAt, createdAt.

Submission: id, userId, contestId, type (image|video), title, description, mediaUrl, thumbnailUrl, status (pending|approved|rejected), votesCount (int), createdAt.

Vote: id, userId, submissionId, createdAt (UNIQUE по userId+submissionId).

GloryLedger: id, userId, delta (int), reason, contestId (nullable), submissionId (nullable), createdAt.

AuditLog (basic): id, actorUserId, action, meta (JSON), createdAt.

Бизнес логика

Потребители могат да качват изображения/видеа (MP4/H.264, WebM) към активни контести; качването влиза със статус pending, админ одобрява/отхвърля.

Гласуване: само одобрени потребители (status=approved) могат да гласуват; 1 глас на потребител за дадена творба (Vote unique). Rate-limit (по userId/IP) – max 30 гласа/час.

Край на контест: бутон за админ „End & Distribute Rewards“

Контролирай, че status става ended.

Сортирай top submissions по votesCount (top 5).

Разпредели prizeGlory по схема: #1=40%, #2=25%, #3=15%, #4=10%, #5=10%. Запиши транзакции в GloryLedger и обнови User.gloryBalance.

Показвай потребителски GLORY баланс и история (GloryLedger).

API и валидация

Използвай Zod за body валидации и тръгови грешки.

POST /api/auth/register – username, email, password.

POST /api/auth/login – email, password → set cookie.

POST /api/auth/logout – clear cookie.

GET /api/me – текущ потребител и роля.

GET /api/contests – списък (public).

GET /api/contests/[id] – детайли + топ 10 по votes.

POST /api/admin/contests (admin) – create.

PATCH /api/admin/contests/[id] (admin) – edit/status.

POST /api/submissions (user approved) – create (upload → Cloudinary, fallback локално).

GET /api/submissions?contestId= – списък (approved only за public; full за admin).

PATCH /api/admin/submissions/[id] – approve/reject.

POST /api/votes – { submissionId } (проверка за уникалност + rate-limit).

POST /api/admin/contests/[id]/end – end & distribute rewards (създай GloryLedger записи атомично в транзакция).

GET /api/admin/users – списък + филтри по статус.

PATCH /api/admin/users/[id] – approve/ban.

GET /api/leaderboard – топ 20 по gloryBalance.

UI (App Router pages) – използвай shadcn/ui компоненти

/ (Home): grid от последни одобрени submissions, филтри по contest, тип (image/video), търсене.

/login, /register (public).

/contests – всички активни/бъдещи/завършили.

/contests/[slug] – детайли, правила, таймер до endAt, cover, бутон „Submit entry“. Под него – одобрени submissions с възможност за гласуване (ако е логнат и approved).

/upload – форма за качване (title, description, type, file, contest select).

/profile – данни за user, GLORY баланс, GloryLedger таблица, мои submissions (статуси).

/leaderboard – топ по GLORY.

/admin (guarded by role=admin):

Dashboard: броячи (pending users, pending submissions, active contests).

Users: таблица със статуси + действия approve/ban.

Submissions: pending queue – преглед медия + approve/reject.

Contests: create/edit/end & distribute.

Logs: AuditLog списък.

Uploads

Интегрирай Cloudinary (env: CLOUDINARY_CLOUD_NAME, CLOUDINARY_API_KEY, CLOUDINARY_API_SECRET).

Ако липсват Cloudinary env, използвай локален upload с multer в /public/uploads + генерирай thumbnail за видео (можеш да скипнеш ffmpeg в първата версия и да сложиш placeholder). Валидай тип/размер.

Сигурност и помощни

Rate-limiter за гласуване – проста in-memory карта по userId/IP с window=1h, limit=30. (В код коментирай, че в продукция трябва Redis.)

XSS/CSRF – JWT httpOnly cookie, sanitize текстови полета.

ErrorBoundary компоненти и унифицирани API грешки { error, code }.

AuditLog запис за admin действия.

Seed & Script-и

Prisma schema + миграции.

Seed админ потребител:

email: bellapokerstars@gmail.com
password: Admin123!

role: admin, status: approved

Seed 1 активен контест („Weekly Top 5“) с prizeGlory=1000.

DX и документация

Добави README.md с инструкции:

cp .env.example .env.local и попълване на JWT_SECRET, CLOUDINARY_* (по желание).

npm i, npx prisma migrate dev, npm run dev.

Добави и минимален API reference в README.

Добави scripts в package.json: "dev", "build", "start", "prisma:studio".

Стил и UX

Tailwind + shadcn/ui (Card, Button, Badge, Table, Tabs, Form, Input, Textarea, Alert, Avatar).

Дизайн: чист, тъмна тема по подразбиране, акцентен цвят #7C3CEC.

В страницата на контеста показвай Top 3 submissions (пирамидално) и live брояч на гласове.

На /profile – CTA „Качи творба“ и малък прогрес бар към следващ GLORY milestone.

Достави:

Пълен работещ код в един Replit проект.

Генерирана Prisma схема, миграции и seed.

Готов админ панел и начални страници.

Демонстрационни placeholder images/videos (ако няма Cloudinary).

Важно:

Използвай App Router на Next.js 14 (папка app/).

Използвай server actions за формите, където е удобно.

Всички админ API/страници да са защитени от middleware (role check).

При „End & Distribute Rewards“ използвай транзакция, актуализирай gloryBalance и създай записи в GloryLedger.

Покрий с basic unit тест за функцията за разпределение на награди (pure function).